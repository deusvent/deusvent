name: ci
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:  
  merge_group:
jobs:
  
  # All the common logic, API, lambdas, Terraform
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/cache@v4
      with:
        path: |
          ~/.cargo
          target/
        key: cargo-linux-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: cargo-linux
    - uses: actions/checkout@v4
    - uses: aws-actions/configure-aws-credentials@v4
      if: github.actor != 'dependabot[bot]' # Dependabot doesn't have access to secrets, skip this step
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
    - run: ./run.sh deps
    - run: ./run.sh build
    - run: ./run.sh test
    - run: ./run.sh lint
  
  # Separate job for the Unreal Engine client as it's a heavy process
  client_unreal:
    runs-on: ubuntu-latest
    # Dependabot doesn't have access to secrets which we need for pulling unreal-engine image. 
    # But it's updates should not effect the client build in any way, so skipping is fine
    if: github.actor != 'dependabot[bot]'
    env:
      GHCR_TOKEN: ${{ secrets.GHCR_TOKEN }}
      GHCR_TOKEN_USER: ${{ secrets.GHCR_TOKEN_USER }}
    steps:
    - uses: actions/cache@v4
      with:
        path: |
          ~/.cargo
          target/
        key: cargo-linux-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: cargo-linux
    - uses: actions/checkout@v4
    - run: ./.github/workflows/vm-cleanup.sh # Cleanup space so unreal-engine Docker image would fit
    - run: ./run.sh deps
    - run: ./run.sh build client-unreal      

    
